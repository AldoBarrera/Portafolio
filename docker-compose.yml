version: '3.8'
services:
  jalasoft:
    container_name: jalasoft
    restart: always
    image: docker.jala.pro/websites/jalasoft:2.0-TESTING
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=${NODE_ENV}
      - CONTENTFUL_ACCESS_KEY=${CONTENTFUL_ACCESS_KEY}
      - CONTENTFUL_SPACE_ID=${CONTENTFUL_SPACE_ID}
      - CONTENTFUL_HOST=${CONTENTFUL_HOST}
      - NEXT_PUBLIC_APP_ENV=${NEXT_PUBLIC_APP_ENV}
      - ACTIVECAMPAIGN_LIST=${ACTIVECAMPAIGN_LIST}
      - GOOGLE_PROPERTY_ID=${GOOGLE_PROPERTY_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - MONGO_HOST=${MONGO_HOST}
      - NEXT_PUBLIC_GOOGLE_CONTAINER_ID=${NEXT_PUBLIC_GOOGLE_CONTAINER_ID}
    volumes:
      - ./logs_data:/app/packages/jalasoft/logs
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.3
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: login.codementoria.com
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: true
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
    volumes:
      - ./nginx/certs/login.codementoria.com/login.codementoria.com.crt:/etc/x509/https/tls.crt
      - ./nginx/certs/login.codementoria.com/login.codementoria.com.key:/etc/x509/https/tls.key
    ports:
      - 8080:8080
      - 8443:8443
    depends_on:
      - postgres
    restart: unless-stopped
    command:
      - start-dev

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
  nginx:
    image: nginx
    container_name: ssl_nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/ssl/
      - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem
    restart: always
    depends_on:
      - keycloak
    healthcheck:
      test: curl --fail -s http://localhost:80 || exit 1
      start_period: 5s
      interval: 10s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
  watchtower:
      image: containrrr/watchtower
      environment:
        - WATCHTOWER_CLEANUP=true
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - $HOME/.docker/config.json:/config.json
      command: --interval 30
volumes:
  logs_data:
  postgres_data:
